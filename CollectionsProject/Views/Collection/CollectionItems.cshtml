@model Collection
@{
    ViewBag.JsPath = "js/scrollingItem.min.js";
    ViewBag.CssPath = "css/collection-view-page.min.css";
    bool isCurrUser = User.Identity!.Name == Model.User.UserName;
    int CountItems = ViewBag.ItemPerPage;
}
@{
    if (isCurrUser || User.IsInRole("Admin"))
    {
        @section Create
        {

        <li class="nav-item">
            <a class="nav-link" asp-controller="Item" asp-action="Create" asp-route-id="@Model.CollectionId">@Loc["Create_Item"]</a>
        </li>
    }
        @section CreatePopUp
        {

        <li class="pop-up-item">
            <a class="pop-up-link" asp-controller="Item" asp-action="Create" asp-route-id="@Model.CollectionId">@Loc["Create_Item"]</a>
        </li>
    }
    }

}
<div class="container">
    <div class="row">
        <div id="@Model.CollectionId" class="bg-light collection-item col-8">
            <div class="row">
                <div class="collection-info col-12  col-md-8">
                    <div class="collection-text-info">
                        <div class="collection-name">
                            <span>@Loc["Name"]</span>
                            <span class="text-name text-warning">@Model.Name</span>

                        </div>
                        <div class="collection-author">
                            <span>@Loc["Author"]</span>
                            <span class="text-warning">@Model.User.UserName</span>
                        </div>
                        <p class="collection-theme text-success">@Model.Type</p>
                        <div class="collection-description">
                            <markdown normalize-whitespace="true">
                                @Model.Description
                            </markdown>
                        </div>
                    </div>
                </div>
                <div class="collection-image col-12 col-md-4">
                    <img class="collection-photo" src="~/images/@Model.Image" alt="image">
                </div>
            </div>
        </div>
    </div>
    @{
        if (CountItems > 0)
        {
            <div class="filter-form row d-flex justify-content-center">
                <div class="filter-wrapper col-md-8 col-lg-6 col-12">
                    <input type="text" class="form-control" maxlength="15" id="filter-input" placeholder="@Loc["Search"]..." autocomplete="off">
                    <button class="btn-success" id="btn-filter"><i class="fa fa-search" aria-hidden="true"></i></button>
                </div>
            </div>
            <div id="item-list" class="flex-column-container container">
                <div class="row overflow-table">
                    <table class="col-8 table-scroll table-collection-list table table-hover table-bordered text-center">
                        <thead class="bg-info">
                            <tr>
                                <th class="attribSort" data-sort="Name">@Loc["Name_Table"]</th>
                                @{
                                    foreach (var field in Model.AddFields)
                                    {
                                        if (field.Type == CollectionFieldType.stringField || field.Type == CollectionFieldType.dateField)
                                        {
                                            <th class="attribSort" data-sort="@field.Name">@field.Name</th>
                                        }

                                    }
                                    <th>@Loc["Action"]</th>
                                }
                            </tr>
                        </thead>
                        <tbody class="table-scroll-body bg-light" id="tableBody">
                        </tbody>
                    </table>
                    <h2 id="item-not-found" class="col-8 Not-Found-Item bg-light">@Loc["No Result"]</h2>
                </div>
                @await Html.PartialAsync("~/Views/Pagination.cshtml",CountItems)
            </div>
        }
    }
</div>

